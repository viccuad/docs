"use strict";(self.webpackChunkkubewarden_docusaurus=self.webpackChunkkubewarden_docusaurus||[]).push([[7886],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=i.createContext({}),c=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return i.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),g=r,f=d["".concat(p,".").concat(g)]||d[g]||s[g]||o;return n?i.createElement(f,a(a({ref:t},u),{},{components:n})):i.createElement(f,a({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8517:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return g},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return s}});var i=n(3117),r=n(102),o=(n(7294),n(3905)),a=["components"],l={sidebar_label:"Introduction",title:""},p="Open Policy Agent",c={unversionedId:"writing-policies/rego/open-policy-agent/intro",id:"writing-policies/rego/open-policy-agent/intro",title:"",description:"Note well",source:"@site/docs/writing-policies/rego/open-policy-agent/01-intro.md",sourceDirName:"writing-policies/rego/open-policy-agent",slug:"/writing-policies/rego/open-policy-agent/intro",permalink:"/writing-policies/rego/open-policy-agent/intro",editUrl:"https://github.com/kubewarden/docs/edit/main/docs/writing-policies/rego/open-policy-agent/01-intro.md",tags:[],version:"current",lastUpdatedAt:1654161587,formattedLastUpdatedAt:"6/2/2022",sidebarPosition:1,frontMatter:{sidebar_label:"Introduction",title:""},sidebar:"docs",previous:{title:"TypeScript",permalink:"/writing-policies/typescript"},next:{title:"Create a New Policy",permalink:"/writing-policies/rego/open-policy-agent/create-policy"}},u={},s=[{value:"Introduction",id:"introduction",level:2},{value:"Compatibility with existing policies",id:"compatibility-with-existing-policies",level:2}],d={toc:s};function g(e){var t=e.components,n=(0,r.Z)(e,a);return(0,o.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"open-policy-agent"},"Open Policy Agent"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note well:")," Open Policy Agent support has been introduced starting from these releases:"),(0,o.kt)("ul",{parentName:"blockquote"},(0,o.kt)("li",{parentName:"ul"},"kwctl: v0.2.0"),(0,o.kt)("li",{parentName:"ul"},"policy-server: v0.2.0"))),(0,o.kt)("p",null,"Open Policy Agent is a general purpose policy framework that uses the\nRego language to write policies."),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Rego policies work by receiving an input to evaluate, and produce an\noutput as a response. In this sense, Open Policy Agent has no specific\ntooling for targeting writing policies for Kubernetes."),(0,o.kt)("p",null,"Specifically, policies in Open Policy Agent receive a JSON input and\nproduce a JSON output. When the Open Policy Agent server is set up to\nreceive admission review requests from Kubernetes, policies will\nreceive a Kubernetes ",(0,o.kt)("inlineCode",{parentName:"p"},"AdmissionReview")," object in JSON format with the\nobject to evaluate, and they have to produce a valid ",(0,o.kt)("inlineCode",{parentName:"p"},"AdmissionReview"),"\nobject in return with the evaluation results."),(0,o.kt)("h2",{id:"compatibility-with-existing-policies"},"Compatibility with existing policies"),(0,o.kt)("p",null,"All policies can be compiled to the ",(0,o.kt)("inlineCode",{parentName:"p"},"wasm")," target (WebAssembly) with\nthe official ",(0,o.kt)("inlineCode",{parentName:"p"},"opa")," CLI tool."),(0,o.kt)("p",null,"In terms of policy execution, you can read more about the ",(0,o.kt)("a",{parentName:"p",href:"/writing-policies/rego/builtin-support"},"Open Policy\nAgent built-in support that is implemented in\nKubewarden"),"."))}g.isMDXComponent=!0}}]);