"use strict";(self.webpackChunkkubewarden_docusaurus=self.webpackChunkkubewarden_docusaurus||[]).push([[827],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=i.createContext({}),s=function(e){var t=i.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return i.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,b=d["".concat(u,".").concat(m)]||d[m]||p[m]||o;return n?i.createElement(b,a(a({ref:t},c),{},{components:n})):i.createElement(b,a({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5128:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var i=n(3117),r=n(102),o=(n(7294),n(3905)),a=["components"],l={sidebar_label:"Building & Distributing Policies",title:""},u=void 0,s={unversionedId:"writing-policies/rust/build-and-distribute",id:"writing-policies/rust/build-and-distribute",title:"",description:"Building the policy",source:"@site/docs/writing-policies/rust/07-build-and-distribute.md",sourceDirName:"writing-policies/rust",slug:"/writing-policies/rust/build-and-distribute",permalink:"/writing-policies/rust/build-and-distribute",editUrl:"https://github.com/kubewarden/docs/edit/main/docs/writing-policies/rust/07-build-and-distribute.md",tags:[],version:"current",lastUpdatedAt:1654161587,formattedLastUpdatedAt:"6/2/2022",sidebarPosition:7,frontMatter:{sidebar_label:"Building & Distributing Policies",title:""},sidebar:"docs",previous:{title:"Logging",permalink:"/writing-policies/rust/logging"},next:{title:"Introduction to Go",permalink:"/writing-policies/go/intro-go"}},c={},p=[{value:"Building the policy",id:"building-the-policy",level:2},{value:"Distributing the policy",id:"distributing-the-policy",level:2},{value:"More examples",id:"more-examples",level:2}],d={toc:p};function m(e){var t=e.components,n=(0,r.Z)(e,a);return(0,o.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"building-the-policy"},"Building the policy"),(0,o.kt)("p",null,"So far we have built the policy using as a compilation target the same operating\nsystem and architecture of our development machine."),(0,o.kt)("p",null,"It's now time to build the policy as a WebAssembly binary, also known as ",(0,o.kt)("inlineCode",{parentName:"p"},".wasm"),"\nfile."),(0,o.kt)("p",null,"This can be done with a simple command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"make build\n")),(0,o.kt)("p",null,"This command will build the code in release mode, with WebAssembly as\ncompilation target."),(0,o.kt)("p",null,"The build will produce the following file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ file target/wasm32-unknown-unknown/release/demo.wasm\ntarget/wasm32-unknown-unknown/release/demo.wasm: WebAssembly (wasm) binary module version 0x1 (MVP)\n")),(0,o.kt)("h2",{id:"distributing-the-policy"},"Distributing the policy"),(0,o.kt)("p",null,"This topic is covered inside of the ",(0,o.kt)("a",{parentName:"p",href:"/distributing-policies"},"distributing\npolicies")," section of Kubewarden's\ndocumentation."),(0,o.kt)("h2",{id:"more-examples"},"More examples"),(0,o.kt)("p",null,"You can find more Kubewarden policies written in Rust inside of Kubewarden's\nGitHub space. ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/search?l=Rust&q=topic%3Apolicy-as-code+org%3Akubewarden&type=Repositories"},"This query"),"\ncan help you find them."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Worth of note:")," these repositories have a series of GitHub Actions that automate\nthe following tasks:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Run unit tests and code linting on pull requests and after code is merged\ninto the main branch"),(0,o.kt)("li",{parentName:"ul"},"Build the policy in ",(0,o.kt)("inlineCode",{parentName:"li"},"release")," mode and push it to a OCI registry as an\nartifact")))}m.isMDXComponent=!0}}]);